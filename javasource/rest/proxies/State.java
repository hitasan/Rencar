// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package rest.proxies;

public class State
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject stateMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "REST.State";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		_id("_id"),
		Sigla("Sigla"),
		Nome("Nome"),
		State_Root("REST.State_Root"),
		Regiao_State("REST.Regiao_State");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public State(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected State(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject stateMendixObject)
	{
		if (stateMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, stateMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.stateMendixObject = stateMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'State.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static rest.proxies.State initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return rest.proxies.State.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static rest.proxies.State initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new rest.proxies.State(context, mendixObject);
	}

	public static rest.proxies.State load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return rest.proxies.State.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of _id
	 */
	public final java.lang.Integer get_id()
	{
		return get_id(getContext());
	}

	/**
	 * @param context
	 * @return value of _id
	 */
	public final java.lang.Integer get_id(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames._id.toString());
	}

	/**
	 * Set value of _id
	 * @param _id
	 */
	public final void set_id(java.lang.Integer _id)
	{
		set_id(getContext(), _id);
	}

	/**
	 * Set value of _id
	 * @param context
	 * @param _id
	 */
	public final void set_id(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer _id)
	{
		getMendixObject().setValue(context, MemberNames._id.toString(), _id);
	}

	/**
	 * @return value of Sigla
	 */
	public final java.lang.String getSigla()
	{
		return getSigla(getContext());
	}

	/**
	 * @param context
	 * @return value of Sigla
	 */
	public final java.lang.String getSigla(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Sigla.toString());
	}

	/**
	 * Set value of Sigla
	 * @param sigla
	 */
	public final void setSigla(java.lang.String sigla)
	{
		setSigla(getContext(), sigla);
	}

	/**
	 * Set value of Sigla
	 * @param context
	 * @param sigla
	 */
	public final void setSigla(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String sigla)
	{
		getMendixObject().setValue(context, MemberNames.Sigla.toString(), sigla);
	}

	/**
	 * @return value of Nome
	 */
	public final java.lang.String getNome()
	{
		return getNome(getContext());
	}

	/**
	 * @param context
	 * @return value of Nome
	 */
	public final java.lang.String getNome(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Nome.toString());
	}

	/**
	 * Set value of Nome
	 * @param nome
	 */
	public final void setNome(java.lang.String nome)
	{
		setNome(getContext(), nome);
	}

	/**
	 * Set value of Nome
	 * @param context
	 * @param nome
	 */
	public final void setNome(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String nome)
	{
		getMendixObject().setValue(context, MemberNames.Nome.toString(), nome);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of State_Root
	 */
	public final rest.proxies.Root getState_Root() throws com.mendix.core.CoreException
	{
		return getState_Root(getContext());
	}

	/**
	 * @param context
	 * @return value of State_Root
	 * @throws com.mendix.core.CoreException
	 */
	public final rest.proxies.Root getState_Root(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		rest.proxies.Root result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.State_Root.toString());
		if (identifier != null) {
			result = rest.proxies.Root.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of State_Root
	 * @param state_root
	 */
	public final void setState_Root(rest.proxies.Root state_root)
	{
		setState_Root(getContext(), state_root);
	}

	/**
	 * Set value of State_Root
	 * @param context
	 * @param state_root
	 */
	public final void setState_Root(com.mendix.systemwideinterfaces.core.IContext context, rest.proxies.Root state_root)
	{
		if (state_root == null) {
			getMendixObject().setValue(context, MemberNames.State_Root.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.State_Root.toString(), state_root.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Regiao_State
	 */
	public final rest.proxies.Regiao getRegiao_State() throws com.mendix.core.CoreException
	{
		return getRegiao_State(getContext());
	}

	/**
	 * @param context
	 * @return value of Regiao_State
	 * @throws com.mendix.core.CoreException
	 */
	public final rest.proxies.Regiao getRegiao_State(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		rest.proxies.Regiao result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Regiao_State.toString());
		if (identifier != null) {
			result = rest.proxies.Regiao.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Regiao_State
	 * @param regiao_state
	 */
	public final void setRegiao_State(rest.proxies.Regiao regiao_state)
	{
		setRegiao_State(getContext(), regiao_state);
	}

	/**
	 * Set value of Regiao_State
	 * @param context
	 * @param regiao_state
	 */
	public final void setRegiao_State(com.mendix.systemwideinterfaces.core.IContext context, rest.proxies.Regiao regiao_state)
	{
		if (regiao_state == null) {
			getMendixObject().setValue(context, MemberNames.Regiao_State.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Regiao_State.toString(), regiao_state.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return stateMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final rest.proxies.State that = (rest.proxies.State) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
